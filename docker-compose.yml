services:
  gateway-service:
    build:
      context: ./gateway-service
    container_name: gatewayservice
    restart: always
    ports:
      - "8090:8080"
    env_file:
      - .env
    networks:
      - app_network

  adoption-post-service:
    build:
      context: .  #root project
      dockerfile: adoption-post-service/Dockerfile
    container_name: adoptionpostservice
    restart: always
    depends_on:
      - postgres-db_adottato
    ports:
      - "8081:8080"
    environment:
      DB_USER: app_user
      DB_PASSWORD: app_password
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: password
      RABBITMQ_ADOTTATO_EXCHANGE: adottato.exchange
      RABBITMQ_NEW_POST_ROUTING_KEY: post.new
      RABBITMQ_CHAT_REQUEST_ACCEPTED_ROUTING_KEY: chat.request.accepted
      RABBITMQ_ADOPTION_POST_QUEUE_CHAT: adoptionpost.queue.requestaccepted
    networks:
      - app_network

  chat-service:
    build:
      context: ./chat-service
    container_name: chat-service
    restart: always
    depends_on:
      - postgres-db_adottato
    ports:
      - "8082:8080"
    environment:
      DB_USER: app_user
      DB_PASSWORD: app_password
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: password
      RABBITMQ_ADOTTATO_EXCHANGE: adottato.exchange
      RABBITMQ_CHAT_NOTIFICATION_ROUTING_KEY: chat.notification
      RABBITMQ_CHAT_REQUEST_ACCEPTED_ROUTING_KEY: chat.request.accepted
    networks:
      - app_network

  user-service:
    build:
      context: ./user-service
    container_name: userservice
    restart: always
    depends_on:
      - postgres-db_adottato
    ports:
      - "8083:8080"
    env_file:
      - .env
    environment:
      DB_USER: app_user
      DB_PASSWORD: app_password
    networks:
      - app_network

  saved-search-service:
    build:
      context: .  #root project
      dockerfile: saved-search-service/Dockerfile
    container_name: savedsearchservice
    restart: always
    depends_on:
      - postgres-db_adottato
    ports:
      - "8084:8080"
    environment:
      DB_USER: app_user
      DB_PASSWORD: app_password
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: password
      RABBITMQ_ADOTTATO_EXCHANGE: adottato.exchange
      RABBITMQ_SAVED_SEARCH_QUEUE: savedsearch.queue
      RABBITMQ_NEW_POST_ROUTING_KEY: post.new
      RABBITMQ_SAVEDSEARCH_MATCH: savedsearch.match
    networks:
      - app_network

  email-service:
    build:
      context: ./email-service
    container_name: email-service
    restart: always
    depends_on:
      - postgres-db_adottato
      - rabbitmq
    ports:
      - "8085:8080"
    environment:
      DB_USER: app_user
      DB_PASSWORD: app_password
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: password
      RABBITMQ_ADOTTATO_EXCHANGE: adottato.exchange
      RABBITMQ_EMAIL_QUEUE_CHAT: email.queue.chat
      RABBITMQ_EMAIL_QUEUE_SAVED_SEARCH: email.queue.savedsearch
      RABBITMQ_CHAT_NOTIFICATION_ROUTING_KEY: chat.notification
      RABBITMQ_SAVED_SEARCH_ROUTING_KEY: savedsearch.match
    networks:
      - app_network

  postgres-db_adottato:
    image: postgres:latest
    container_name: postgres_db_adottato
    restart: always
    environment:
      POSTGRES_DB: postgres_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - app_network

  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      INTERNAL_API_BASE: "http://user-service:8083"
    depends_on:
      - user-service
    networks:
      - app_network

  pgadmin_adottato:
    image: dpage/pgadmin4
    container_name: pgadmin_adottato
    restart: always
    depends_on:
      - postgres-db_adottato
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "5051:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin-config/servers.json:/pgadmin4/servers.json:ro
      - ./pgadmin-config/.pgpass:/pgpass:ro
    networks:
      - app_network
      
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
    networks:
      - app_network

volumes:
  db_data:
  pgadmin_data:
  rabbitmq_data:

networks:
  app_network:

